<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mouse</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destination = 'null';
secondSoldier = obj_soldier;
stairs = obj_stairs;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> /// Deletes dialog box
 if(object_exists(obj_textbox))
    {
        var textbox  = instance_place(obj_radio.x+30, obj_radio.y-100, obj_textbox);
        if textbox != noone
        {   
            with(textbox) instance_destroy();
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = mouse_x;
y = mouse_y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Character movement implementation
if(place_meeting(x,y, obj_radio)){
 if(object_exists(obj_textbox))
    {
        var textbox  = instance_place(obj_radio.x+30, obj_radio.y-100, obj_textbox);
        if textbox != noone
        {   
            with(textbox) instance_destroy();
        }
    }
    var i=floor(random(9))
    scr_dialogue(obj_radio.messages[i], obj_radio.x+20, obj_radio.y-130);
    alarm[0]=150;
}


if place_meeting(x, y, obj_pot){
    with(global.Selected){  
            MoveX = obj_pot.x - 32;
            MoveY = obj_pot.y;
            Move = true;
            MoveSpeed = 7;
            Resource = 1
    }
    if(global.ovenBroken){
    with(global.Selected){  
            Repair = true;
    }
    }
    else{
        with(global.Selected){  
            Cooking = true;
        }
    }
}
else if place_meeting(x, y, obj_soldier){
    with(global.Selected){
        secondSoldier = instance_place(mouse_x, mouse_y, obj_soldier);
        if(instance_exists(secondSoldier)){
            secondSoldier.isTarget=true;
            if(x &lt;= secondSoldier.x)
                MoveX = secondSoldier.x - 34;
            else
                MoveX = secondSoldier.x + 34;
            MoveY = secondSoldier.y;
            Move = true;
            MoveSpeed = 7;
            Interact=true;
        }
    }
}
else if place_meeting(x, y, obj_door)&amp;&amp;global.Selected!=-1{
    with(global.Selected){
        MoveX = obj_door.x;
        MoveY = obj_door.y;
        GoOut = true;
        Move = true;
        global.outLevel = ScavengingSkill;
        MoveSpeed = 7;
    }
} else if place_meeting(x, y, obj_anvil){
    with(global.Selected){  
        MoveX = obj_anvil.x - 50;
        MoveY = obj_anvil.y - 11;
        //show_debug_message(string(obj_anvil.y));
        Move = true;
        MoveSpeed = 7;
        CraftingAmmo = true;
    }
} else if place_meeting(x, y, obj_crafting){
    with(global.Selected){  
        MoveX = obj_crafting.x - 16;
        MoveY = obj_crafting.y + 32 ;
        Move = true;
        MoveSpeed = 7;
        CraftDefenses=true;
    }
} else if instance_exists(obj_sentry)&amp;&amp;(place_meeting(x, y, obj_sentry)){
    with(global.Selected){  
        MoveX = obj_sentry.x-20;
        MoveY = obj_sentry.y + 11;
        Move = true;
        MoveSpeed = 7;
        goToWatch=true;
    }
} else if instance_exists(obj_leftSentry)&amp;&amp;(place_meeting(x, y, obj_leftSentry)){
    with(global.Selected){  
        MoveX = obj_leftSentry.x+50;
        MoveY = obj_leftSentry.y + 11;
        Move = true;
        MoveSpeed = 7;
        goToWatch=true;
    }
} else if place_meeting(x, y, obj_chimney){
    with(global.Selected){  
        MoveX = obj_chimney.x +50;
        MoveY = obj_chimney.y +32;
        Move = true;
        MoveSpeed = 7;
        makingFire = true;
    }
}


else if place_meeting(x, y, obj_stairs){
    with(global.Selected){
        stairs = instance_place(mouse_x, mouse_y, obj_stairs);
        if(instance_exists(stairs)){
            MoveX = stairs.x;
            if(stairs.y&gt;y)
                MoveY = y+192;
            else
                MoveY = y-192;
            Move = true;
            MoveSpeed = 7;
        }
    }
}

else{
    with(global.Selected){
        //moving to different floors
        if(mouse_y&lt;=960&amp;&amp;mouse_y&gt;768){
            MoveY = 928;
        }
        else if(mouse_y&lt;=768&amp;&amp;mouse_y&gt;576){
            MoveY = 736;
        }
        else if(mouse_y&lt;=576&amp;&amp;mouse_y&gt;384){
            MoveY = 544;
        }
        else if(mouse_y&lt;=384&amp;&amp;mouse_y&gt;224){
            MoveY = 352;
        }
        else{
            MoveY = y;
        }
        // limiting moving outside the walls
        if(mouse_x&gt;368&amp;&amp;mouse_x&lt;1552)
            MoveX = mouse_x;
        else if(mouse_x&lt;=368)
            MoveX = 368;
        else if(mouse_x&gt;=1552)
            MoveX = 1552;
        Move = true;
        MoveSpeed = 7;
        isTarget=false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Character selection
if(place_meeting(x,y, obj_move)){
    global.movement=!global.movement;
}
if(place_meeting(x,y, obj_radio)){
 if(object_exists(obj_textbox))
    {
        var textbox  = instance_place(obj_radio.x+30, obj_radio.y-100, obj_textbox);
        if textbox != noone
        {   
            with(textbox) instance_destroy();
        }
    }
    var i=floor(random(9))
    scr_dialogue(obj_radio.messages[i], obj_radio.x+20, obj_radio.y-130);
    alarm[0]=150;
}

if place_meeting(x, y, obj_soldier){
    soldierID = instance_place(x, y, obj_soldier);
    global.Selected = soldierID.id;
} 
else if place_meeting(x, y, obj_button_fastForward){
    if(global.multiplier==1){
        global.multiplier=2;
    } else if(global.multiplier==2) {
        global.multiplier=5;
    } else{
        global.multiplier=1;
    }
}
else{
    global.Selected = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_color(c_black);
draw_set_font(fnt);

var locationx=x-30;
var locationy=y-10;

if place_meeting(x,y,obj_door){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Go out")
    }
    else{
        draw_text(locationx,locationy,"Door")
    }
}
if place_meeting(x,y,obj_sentry)||place_meeting(x,y,obj_leftSentry){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Go on watch")
    }
    else{
        draw_text(locationx,locationy,"Sentry")
    }
}
if place_meeting(x,y,obj_crafting){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Craft defenses")
    }
    else{
        draw_text(locationx,locationy,"Crafting station")
    }
}

if place_meeting(x,y,obj_soldier){ 
    if(global.Selected!=-1){
        if(global.Selected!=instance_place(x,y,obj_soldier))
            if(global.Selected.isMedic)
                draw_text(locationx,locationy,"Heal")
            else
                draw_text(locationx,locationy,"Talk")
        else if(global.Selected.isMedic)
                draw_text(locationx,locationy,"Heal self")
    }
    else{
        draw_text(locationx,locationy,"Select")
    }
}

if place_meeting(x,y,obj_chimney){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Make fire")
    }
    else{
        draw_text(locationx,locationy,"Chimney")
    }
}

if place_meeting(x,y,obj_anvil){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Craft ammo")
    }
    else{
        draw_text(locationx,locationy,"Anvil")
    }
}

if place_meeting(x,y,obj_stairs){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Use")
    }
    else{
        draw_text(locationx,locationy,"Stairs")
    }
}

if place_meeting(x,y,obj_german){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Attack")
    }
    else{
        draw_text(locationx,locationy,"Enemy")
    }
}

if place_meeting(x,y,obj_pot){ 
    if(global.Selected!=-1){
        draw_text(locationx,locationy,"Cook")
    }
    else{
        draw_text(locationx,locationy,"Oven")
    }
}

if place_meeting(x,y,obj_button_fastForward){ 
        draw_text(locationx,locationy,"Change game speed")
}

if place_meeting(x,y,obj_pileScraps){ 
        draw_text(locationx,locationy,"Scraps left:"+string(global.Scraps))
}

if place_meeting(x,y,obj_pileAmmo){ 
        draw_text(locationx,locationy,"Ammo left:"+string(global.Ammunition))
}

if place_meeting(x,y,obj_foodChest){ 
        draw_text(locationx,locationy-20,"Cooked food:"+string(global.CookedFood)+"#Raw food: "+string(global.RawFood))
}

if place_meeting(x,y,obj_pause){ 
        draw_text(locationx,locationy,"Pause game")
}

if place_meeting(x,y,obj_radio){ 
    draw_text(locationx,locationy,"Listen to")
}
if place_meeting(x,y,obj_move){ 
    if(global.movement)
        draw_text(locationx,locationy,"Disable random movement")
    else 
        draw_text(locationx,locationy,"Enable random movement")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
