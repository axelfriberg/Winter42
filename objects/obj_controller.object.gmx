<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setting global variables

global.Selected = -1;
global.Temperature = 17;
global.Scraps = 7;
global.Ammunition = 53;
global.RawFood = 4;
global.CookedFood = 0;
global.Soldiers = 3;
global.SnowCounter = 0;

global.multiplier = 1;
alarm[0] = 100/global.multiplier;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 200;

for(i = 0; i &lt; 15; i++){
    instance_create(x, 0, obj_snowFlake);
    x += 100;
}

if(global.SnowCounter &lt; 50){
alarm[0] = 6;
global.SnowCounter += 1;
if(global.SnowCounter % 5 == 0){
    global.Temperature -= 1;
} 
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the view
var view = 0;
var up = keyboard_check(ord("W"));
var down = keyboard_check(ord("S"));
var left = keyboard_check(ord("A"));
var right = keyboard_check(ord("D"));

var amount = view_wview[view]/80;

if (up) view_yview[view] -= amount;
if (down) view_yview[view] += amount;
if (left) view_xview[view] -= amount;
if (right) view_xview[view] += amount;

if (mouse_wheel_up()){
    scr_view_zoom(-0.1, view);
} 

if (mouse_wheel_down()){
    scr_view_zoom(0.1, view);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUI drawing function

draw_set_halign(fa_left)
draw_set_valign(fa_middle)
draw_set_color(c_white)

draw_text(20,35,"Day "+ string(global.day));
draw_text(20,55,"Time " + string(global.Thours)+string(global.hours)+":"+string(global.Tminutes)+string(global.minutes));
draw_text(20,75,"Speed "+ string(global.multiplier)+"x");
draw_text(20,95,"Temperature: " + string(global.Temperature)+" C");
draw_text(20,115,"Raw food: " + string(global.RawFood));
draw_text(20,135,"Cooked food: " + string(global.CookedFood));
draw_text(20,155,"Scraps: " + string(global.Scraps));
draw_text(20,175,"Ammunition: " + string(global.Ammunition));
/*
if(object_exists(obj_button_fastForward))
{
    with(obj_button_fastForward) instance_destroy();
}*/
inst = instance_create(900, 100, obj_button_fastForward);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
